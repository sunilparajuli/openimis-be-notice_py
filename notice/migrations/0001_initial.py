# Generated by Django 4.2.18 on 2025-03-17 19:10

import core.fields
import core.models.base_mutation
import core.utils
import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0030_exportablequerymodel_file_format'),
        ('location', '0018_auto_20230925_2243'),
    ]

    operations = [
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High')], default='MEDIUM', max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('schedule_publish', models.BooleanField(default=False)),
                ('publish_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_from', models.DateTimeField(auto_now_add=True)),
                ('validity_to', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('health_facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notices', to='location.healthfacility')),
            ],
            options={
                'db_table': 'tbl_notices',
            },
        ),
        migrations.CreateModel(
            name='NoticeMutation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mutation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='category', to='core.mutationlog')),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='mutations', to='notice.notice')),
            ],
            options={
                'db_table': 'tbl_noticeMutations',
                'managed': True,
            },
            bases=(models.Model, core.models.base_mutation.ObjectMutation),
        ),
        migrations.CreateModel(
            name='NoticeAttachment',
            fields=[
                ('validity_from', core.fields.DateTimeField(db_column='ValidityFrom', default=datetime.datetime.now)),
                ('validity_to', core.fields.DateTimeField(blank=True, db_column='ValidityTo', null=True)),
                ('legacy_id', models.UUIDField(blank=True, db_column='LegacyID', null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('general_type', models.CharField(choices=[('FILE', 'File'), ('URL', 'URL')], default='FILE', help_text='Indicates whether this is a file attachment or a URL link.', max_length=4)),
                ('type', models.TextField(blank=True, help_text='Custom type description if needed.', null=True)),
                ('title', models.TextField(blank=True, help_text='Title or name of the attachment.', null=True)),
                ('date', core.fields.DateField(blank=True, default=core.utils.TimeUtils.now, help_text='Date of the attachment.')),
                ('filename', models.TextField(blank=True, help_text='Original filename of the uploaded file.', null=True)),
                ('mime', models.TextField(blank=True, help_text="MIME type of the file (e.g., 'application/pdf').", null=True)),
                ('module', models.TextField(default='notice', help_text='Module identifier for future core integration.', null=True)),
                ('url', models.TextField(blank=True, help_text="URL link to the attachment if general_type is 'URL'.", null=True)),
                ('document', models.TextField(blank=True, help_text="Base64-encoded file content if general_type is 'FILE'.", null=True)),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='notice.notice')),
            ],
            options={
                'db_table': 'tbl_noticeAttachments',
            },
        ),
    ]
